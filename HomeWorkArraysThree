using System;

namespace HomeWorkF3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;

            int userX = 5;
            int userY = 5;
            char[,] map =
                {
                {'#','#','#','#','#','#','#','#','#','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ','&',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#',' ',' ','&',' ','&',' ',' ',' ','#', },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
                {'#','#','#','#','#','#','#','#','#','#', },
                };

            DrawMap(ref map, ref userX, ref userY);
        }
  
        static void Character(ref char[,] map, ref int userX, ref int userY)
        {
            Console.SetCursorPosition(userY,userX);
            Console.Write("@");

            ChangeDirection( ref map, ref userX, ref userY);
        }

        static void ChangeDirection( ref char[,] map , ref int userX, ref int userY)
        {
            ConsoleKeyInfo charKey = Console.ReadKey();

            switch (charKey.Key)
            {
                case ConsoleKey.UpArrow:
                        if (map[userX - 1, userY] != '#')
                        {
                            userX--;
                        }
                    break;

                case ConsoleKey.DownArrow:
                        if (map[userX + 1, userY] != '#')
                        {
                            userX++;
                        }
                        break;

                case ConsoleKey.LeftArrow:
                        if (map[userX, userY - 1] != '#')
                        {
                            userY--;
                        }
                        break;

                case ConsoleKey.RightArrow:
                        if (map[userX, userY + 1] != '#')
                        {
                            userY++;
                        }
                        break;
            }
        }

        static void DrawMap(ref char[,] map, ref int userX, ref int userY)
        {
            int countHoards = 0;

            while (countHoards < 3)
            {
                for (int i = 0; i < map.GetLength(0); i++)
                {
                    for (int j = 0; j < map.GetLength(1); j++)
                    {
                        Console.Write(map[i, j]);
                    }
                    Console.WriteLine();
                }

                Character(ref map, ref userX, ref userY);

                if (map[userX,userY] == '&')
                {
                    countHoards++;
                    map[userX, userY] = ' ';
                }

                Console.Clear();
            }
        }
    }
}
