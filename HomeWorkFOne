using System;
//доп массив, цикл по старому, за циклом присваивание инпута к темпу у него вычет из длины, старый равен темпу
namespace HomeWork_15
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] fullNames = new string[0];
            string[] positions = new string[0];

            bool isProgramOpen = true;
            string userInput = "";

            while (isProgramOpen)
            {
                Console.WriteLine("1 - добавить досье");
                Console.WriteLine("2 - вывести все досье");
                Console.WriteLine("3 - удалить досье");
                Console.WriteLine("4 - поиск по фамилии");
                Console.WriteLine("5 - выход");
                userInput = Console.ReadLine();

                Console.Clear();

                switch (userInput)
                {
                    case "1":
                        AddDossier(ref fullNames, ref positions);
                        break;

                    case "2":
                        ShowListDossier( fullNames,  positions);
                        break;
                    case "3":

                        RemoveDossier(ref fullNames, ref positions);
                        break;

                    case "4":
                        SearchSurname(ref fullNames, ref positions);
                        break;
                    case "5":
                        isProgramOpen = false;
                        break;
                }
            }
        }

        static void AddDossier(ref string[] fullNames, ref string[] positions)
        {
            Console.WriteLine("Добавление досье");

            Console.WriteLine("ФИО: ");
            string inputFullNames = Console.ReadLine();

            Console.WriteLine();

            Console.WriteLine("Должность: ");
            string inputPositions = Console.ReadLine();

            AddElement(ref fullNames, ref positions, ref inputFullNames, ref inputPositions);

            Console.WriteLine();

            Console.WriteLine($"{inputFullNames}, успешно добавлен.");

            Console.ReadKey();
            Console.Clear();
        }

        static void AddElement(ref string[] fullNames, ref string[] positions, ref string inputFullNames, ref string inputPositions)
        {
            string[] tempFullNames = new string[fullNames.Length + 1];

            for (int i = 0; i < fullNames.Length; i++)
            {
                tempFullNames[i] = fullNames[i];
            }

            tempFullNames[tempFullNames.Length - 1] = inputFullNames;
            fullNames = tempFullNames;

            string[] tempPosition = new string[positions.Length + 1];

            for (int i = 0; i < positions.Length; i++)
            {
                tempPosition[i] = positions[i];
            }

            tempPosition[tempPosition.Length - 1] = inputPositions;
            positions = tempPosition;
        }

        static void ShowListDossier( string[] fullNames,  string[] positions)
        {
            int id = 0;
            bool canShow = true;

            while (id < positions.Length)
            {

                for (int i = 0; i < fullNames.Length; i++)
                {
                    if (canShow)
                    {
                        Console.WriteLine($"{id + 1} ФИО: {fullNames[id]}");
                        canShow = false;
                    }
                }

                canShow = true;

                for (int j = 0; j < positions.Length; j++)
                {
                    if (canShow)
                    {
                        Console.WriteLine($"Должность: {positions[id]}");
                        canShow &= false;
                    }
                }

                canShow = true;
                id++;
            }

            Console.WriteLine();
        }

        static void RemoveDossier(ref string[] fullNames, ref string[] positions)
        {
            bool isMenuOpen = true;
            int inputId = 0;
            string userInput = "";

            while (isMenuOpen)
            {
                Console.WriteLine("Для выхода введите 'exit'");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "exit":
                        isMenuOpen = false;
                        Console.Clear();
                        break;

                    default:

                        ShowListDossier( fullNames, positions);

                        Console.WriteLine();
                        Console.ReadKey();

                        Console.WriteLine("Кого вы хотите удалить: ");
                        inputId = Convert.ToInt32(Console.ReadLine());

                        if (inputId > 0 && inputId < int.MaxValue)
                        {
                            inputId--;

                            string[] tempInitials = new string[fullNames.Length - 1];

                            for (int i = 0; i < inputId; i++)
                            {
                                tempInitials[i] = fullNames[i];
                            }

                            for (int i = inputId + 1; i < positions.Length; i++)
                            {
                                tempInitials[i - 1] = fullNames[i];
                            }

                            fullNames = tempInitials;

                            string[] tempPositions = new string[positions.Length - 1];

                            for (int i = 0; i < inputId; i++)
                            {
                                tempPositions[i] = positions[i];
                            }

                            for (int i = inputId + 1; i < positions.Length; i++)
                            {
                                tempPositions[i - 1] = positions[i];
                            }

                            positions = tempPositions;

                            ShowListDossier(fullNames,  positions);
                            Console.ReadKey();
                            Console.Clear();
                        }

                        else
                            Console.WriteLine("Некоректные данные попробуйте ещё раз");

                        Console.ReadKey();
                        Console.Clear();
                        break;
                }
            }
        }

        static void SearchSurname(ref string[] fullNames, ref string[] positions)
        {
            string userInput = "";
            bool isMenuOpen = true;

            while (isMenuOpen)
            {
                Console.WriteLine("Для выхода введите 'exit'");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                case "exit":
                    isMenuOpen = false;
                    break;

                default:
                    bool isHumanFound = false;

                    Console.Write("Введите фамилию человека, которого вы хотите найти: ");
                    userInput = Console.ReadLine();
   
                        for (int i = 0; i < fullNames.Length; i++)
                        {
                            if (fullNames[i].ToLower() == userInput.ToLower())
                            {
                                Console.WriteLine($"Номер - {i + 1}");
                                isHumanFound = true;
                            }     
                        }

                        if (isHumanFound == false)
                            Console.WriteLine("Человек не найден");
                        break;
                    
                }
            }
        }
    }
}
