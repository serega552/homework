using System;

namespace HomeWorkF3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;

            int userPositionsX = 5;
            int userPositionsY = 5;
            int userDirectionX = 0;
            int userDirectionY = 0;
            int numberTry = 0;
            int maxNumberTry = int.MaxValue;
            char[,] map =
                {
            {'#','#','#','#','#','#','#','#','#','#', },
            {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ','#',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ','#',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ','#',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
            {'#',' ',' ','#',' ','#',' ',' ',' ','#', },
            {'#',' ',' ',' ',' ',' ',' ',' ',' ','#', },
            {'#','#','#','#','#','#','#','#','#','#', },
            };

            while (numberTry != maxNumberTry)
            {
                DrawMap(ref map);
                DrawCharacter(ref userPositionsX, ref userPositionsY);
                ChangeDirection(map, ref userDirectionX, ref userDirectionY, ref userPositionsX, ref userPositionsY);

                Console.Clear();
                numberTry++;
            }
        }

        static void DrawCharacter( ref int userPositionsX, ref int userPositionsY)
        {            
                Console.SetCursorPosition(userPositionsX, userPositionsY);
                Console.WriteLine('@');          
        }

        static void ChangeDirection(char[,] map, ref int userDirectionX, ref int userDirectionY, ref int userPositionsX, ref int userPositionsY)
        {
            ConsoleKeyInfo charKey = Console.ReadKey();

            switch (charKey.Key)
            {
                case ConsoleKey.UpArrow:
                    userDirectionX = 0;
                    userDirectionY = -1;
                    break;

                case ConsoleKey.DownArrow:
                    userDirectionX = 0;
                    userDirectionY = 1;
                    break;

                case ConsoleKey.LeftArrow:
                    userDirectionX = -1;
                    userDirectionY = 0;
                    break;

                case ConsoleKey.RightArrow:
                    userDirectionX = 1;
                    userDirectionY = 0;
                    break;
            }

            if (map[userPositionsY + userDirectionY, userPositionsX + userDirectionX] != '#')
            {
                Console.SetCursorPosition(userPositionsX, userPositionsY);
                Console.WriteLine(' ');

                userPositionsX += userDirectionX;
                userPositionsY += userDirectionY;
            }
            else
            {
                Console.SetCursorPosition(userPositionsX, userPositionsY);
                Console.WriteLine('@');
            }
        }

        static void DrawMap(ref char[,] map)
        {
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {

                    Console.Write(map[i, j]);
                }
                Console.WriteLine();
            }
        }
    }
}
